# install oracle linux 8
	network
	network time
	use entire disk: 40GB
	no root
	yildiz : 123456, admin
	accept license
	login once

# connect with solar putty yildiz_temp 

sudo visudo
yildiz ALL=(ALL) NOPASSWD:ALL
passwd

# setup sftp with solar putty
transfer db_home.zip

# add disks to vm
# familiarize with fdisk_how_to.txt
fdisk -l
fdisk /dev/xxx
	n
	p,1,xx,xx
	t,8e
	w
pvcreate /dev/xxxp1
pvs
vgcreate vg_oracle /dev/xxxp1
vgs
pvscan
lvcreate -n lv_swap -L {RAM_SIZE}G vg_oracle
lvcreate -n lv_oracle -L 20G vg_oracle
lvcreate -n lv_oracle_data -L {DATA_SIZE}G vg_oracle
lvcreate -n lv_oracle_fra -L {2*DATA_SIZE}G vg_oracle
lvcreate -n lv_oracle_backup -L {2*DATA_SIZE}G vg_oracle
lvs
lvdisplay
mkfs.xfs /dev/vg_oracle/lv_oracle
mkfs.xfs /dev/vg_oracle/lv_oracle_data
mkfs.xfs /dev/vg_oracle/lv_oracle_fra
mkfs.xfs /dev/vg_oracle/lv_oracle_backup

mkdir /uora
mkdir /uoradata
mkdir /uorafra
mkdir /uorabackup

# mount them in fstab
/dev/mapper/vg_oracle-lv_oracle	/uora	xfs	defaults	0 0
/dev/mapper/vg_oracle-lv_oracle_data	/uoradata	xfs	defaults	0 0
/dev/mapper/vg_oracle-lv_oracle_fra	/uorafra	xfs	defaults	0 0
/dev/mapper/vg_oracle-lv_oracle_backup	/uorabackup	xfs	defaults	0 0

# increase swap to RAM size
mkswap /dev/vg_oracle/lv_swap
swapoff /dev/ol/swap
swapon /dev/vg_oracle/lv_swap
vi /etc/fstab
	change /ol/swap to /vg_oracle/lv_swap
vi /etc/default/grub
	change /ol/swap references to vg_oracle/lv_swap
grub2-mkconfig > /boot/grub2/grub.cfg

# increase size of /dev/shm
nano /etc/fstab
none		/dev/shm 		tempfs	defaults,size={RAM_SIZE}G	0 0
mount -o remount /dev/shm

reboot

#follow this guide:
	https://oracle-base.com/articles/19c/oracle-db-19c-installation-on-oracle-linux-8

# set hostname
nano /etc/hosts
192.168.xxx.xxx {host_name}.localdomain {host_name}

nano /etc/hostname
{host_name}.localdomain

# install prereqs and update
dnf install -y oracle-database-preinstall-19c
yum update -y

# setup misc
passwd oracle

nano /etc/selinux/config
SELINUX=permissive

firewall-cmd --permanent --zone=public --add-port=1521/tcp
firewall-cmd --reload

reboot

##### hls-lsports, done up to here except lv creation

# transfer permissions to oracle
chown -R oracle:oinstall /uora /uoradata /uorafra /uorabackup
chmod -R 775 /uora /uoradata /uorafra /uorabackup

# create the folders and scripts as oracle
mkdir -p /uora/app/oracle/product/19.0.0/dbhome_1
mkdir /uorabackup/rman
mkdir /uorabackup/logs
mkdir /home/oracle/scripts

cat > /home/oracle/scripts/setEnv.sh <<EOF
# Oracle Settings
export TMP=/tmp
export TMPDIR=\$TMP

export ORACLE_SID={host_name}
export ORACLE_HOSTNAME=\$ORACLE_SID.localdomain
export ORACLE_UNQNAME=\$ORACLE_SID
export ORACLE_BASE=/uora/app/oracle
export ORACLE_HOME=\$ORACLE_BASE/product/19.0.0/dbhome_1
export ORA_INVENTORY=/uora/app/oraInventory
export DATA_DIR=/uoradata
export BACKUP_DIR=/uorabackup

export PATH=/usr/sbin:/usr/local/bin:\$PATH
export PATH=\$ORACLE_HOME/bin:\$PATH

export LD_LIBRARY_PATH=\$ORACLE_HOME/lib:/lib:/usr/lib
export CLASSPATH=\$ORACLE_HOME/jlib:\$ORACLE_HOME/rdbms/jlib

export P_FILE=\$ORACLE_HOME/dbs/init\$ORACLE_SID.ora
export SP_FILE=\$ORACLE_HOME/dbs/spfile\$ORACLE_SIDd.ora
export ALERT_LOG=\$ORACLE_BASE/diag/rdbms/\$ORACLE_UNQNAME/\$ORACLE_SID/trace/alert_\$ORACLE_SID.log
export CONTROL_FILE=\$DATA_DIR/\$ORACLE_UNQNAME/CONTROL0d.CTL
export RMAN_LOGS=/uorabackup/logs
EOF

echo ". /home/oracle/scripts/setEnv.sh" >> /home/oracle/.bash_profile

cat > /home/oracle/scripts/start_all.sh <<EOF
#!/bin/bash
. /home/oracle/scripts/setEnv.sh

export ORAENV_ASK=NO
. oraenv
export ORAENV_ASK=YES

dbstart \$ORACLE_HOME
EOF

cat > /home/oracle/scripts/stop_all.sh <<EOF
#!/bin/bash
. /home/oracle/scripts/setEnv.sh

export ORAENV_ASK=NO
. oraenv
export ORAENV_ASK=YES

dbshut \$ORACLE_HOME
EOF

cat > /home/oracle/scripts/level0.rmn <<EOF
run {
	allocate channel ch1 device type disk FORMAT '/uorabackup/rman/backup0_%u_%d_%T_%s_%p.bkp' maxpiecesize 8 G;
	crosscheck backup;
	crosscheck archivelog all;
	delete noprompt expired archivelog all;
	delete noprompt obsolete;
	BACKUP as compressed backupset INCREMENTAL LEVEL 0 TAG=LEVEL_0 DATABASE PLUS ARCHIVELOG;
	backup current controlfile format '/uorabackup/rman/cnt_%u_%d_%T_%s_%p.bkp';
	backup spfile format '/uorabackup/rman/spf_%u_%d_%T_%s_%p.bkp';
	crosscheck backup;
	crosscheck archivelog all;
	delete noprompt expired archivelog all;
	delete noprompt obsolete;
}
EOF

cat > /home/oracle/scripts/level1.rmn <<EOF
run {
	allocate channel ch1 device type disk FORMAT '/uorabackup/rman/backup1_%u_%d_%T_%s_%p.bkp' maxpiecesize 8 G;
	crosscheck backup;
	crosscheck archivelog all;
	delete noprompt expired archivelog all;
	delete noprompt obsolete;
	BACKUP as compressed backupset INCREMENTAL LEVEL 1 TAG=LEVEL_1 DATABASE PLUS ARCHIVELOG;
	backup current controlfile format '/uorabackup/rman/cnt_%u_%d_%T_%s_%p.bkp';
	backup spfile format '/uorabackup/rman/spf_%u_%d_%T_%s_%p.bkp';
	crosscheck backup;
	crosscheck archivelog all;
	delete noprompt expired archivelog all;
	delete noprompt obsolete;
}
EOF

cat > /home/oracle/scripts/rman_level0.sh <<EOF
#!/bin/bash
. /home/oracle/scripts/setEnv.sh
logfile="\$RMAN_LOGS/rman_\$(date +'%Y%m%d_%H%M%S').log"
rman target / nocatalog @/home/oracle/scripts/level0.rmn log="\$logfile" >>/dev/null
EOF

cat > /home/oracle/scripts/rman_level1.sh <<EOF
#!/bin/bash
. /home/oracle/scripts/setEnv.sh
logfile="\$RMAN_LOGS/rman_\$(date +'%Y%m%d_%H%M%S').log"
rman target / nocatalog @/home/oracle/scripts/level1.rmn log="\$logfile" >>/dev/null
EOF

chmod u+x /home/oracle/scripts/*.sh

# login to oracle with gui
cd $ORACLE_HOME
unzip -oq /path/to/software/LINUX.X64_193000_db_home.zip

export CV_ASSUME_DISTID=OEL7.6
./runInstaller
	software only
	single instance
	enterprise edition
	/uora/app/oracle
	manually run root scripts
	install

# when prompted run the scripts as root from ssh
/uora/app/oraInventory/orainstRoot.sh
/uora/app/oracle/product/19.0.0/dbhome_1/root.sh

# continue as oracle user
lsnrctl start
dbca
	advanced
	single instance
	general purpose
	global name and SID: {host_name}
	don't create as container
	use following for the database storage attributes
	set to /uoradata
	don't use OMF
	specify FRA as to /uorafra
	160GB (about twice as big as the data)
	enable archiving
	don't create new listener
	don't vault
	don't label security
	memory -> use automatic shared memory management, 80%
	sizing -> nothing
	character sets -> UTF8
	connection mode -> dedicated
	samples schemas -> no
	don't configure enterprise manager
	don't register to cloud
	same password to rule them all
	create database
	install

# add database to startup configuration
nano /etc/oratab
{oracle_sid}:{oracle_home}:Y

sqlplus / as sysdba
# maybe startup mount
show parameter target; # for memory parameters
show parameter db_recory_file_dest; # for fra parameters
alter system set db_create_file_dest='/uoradata';
alter system set db_flashback_retention_target = 2880; # 2 days
alter database flashback on;
exit;

reboot

# extend max string size
su - oracle
sqlplus / as sysdba
shutdown immediate;
startup upgrade;
alter system set MAX_STRING_SIZE = EXTENDED;
@/uora/app/oracle/product/19.0.0/dbhome_1/rdbms/admin/utl32k.sql
shutdown immediate;

# configure rman
rman target /

# display and change rman configuration
show all;

CONFIGURE RETENTION POLICY TO REDUNDANCY 2;
CONFIGURE CONTROLFILE AUTOBACKUP ON;
CONFIGURE ARCHIVELOG DELETION POLICY TO BACKED UP 2 TIMES TO DISK;

# as oracle add rman scripts to crontab
crontab -e
5 5 * * 0,2,4,6 /home/oracle/scripts/rman_level1.sh
5 4 * * 1,3,5 /home/oracle/scripts/rman_level0.sh
5 16 * * * /home/oracle/scripts/rman_level1.sh

# as root create the service
cat > /lib/systemd/system/dbora.service <<EOF
[Unit]
Description=The Oracle Database Service
After=syslog.target network.target

[Service]
# systemd ignores PAM limits, so set any necessary limits in the service.
# Not really a bug, but a feature.
# https://bugzilla.redhat.com/show_bug.cgi?id=754285
LimitMEMLOCK=infinity
LimitNOFILE=65535

#Type=simple
# idle: similar to simple, the actual execution of the service binary is delayed
#       until all jobs are finished, which avoids mixing the status output with shell output of services.
RemainAfterExit=yes
User=oracle
Group=oinstall
Restart=no
ExecStart=/bin/bash -c '/home/oracle/scripts/start_all.sh'
ExecStop=/bin/bash -c '/home/oracle/scripts/stop_all.sh'

[Install]
WantedBy=multi-user.target
EOF

systemctl daemon-reload
# to start/stop/autostart service use the commands below
systemctl start dbora
systemctl stop dbora
systemctl enable dbora
systemctl disable dbora
systemctl status dbora

reboot

create_tablespaces.sql
crete_users.sql
create_db_admin.sql
create_app_log.sql
create_app_core.sql
