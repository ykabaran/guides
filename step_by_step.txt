RHEL 7.7
Oracle 19c

Hardware
	1 primary hdd (40gb)
	1 swap hdd (10gb)
	1 data hdd (100gb)
	1 backup hdd (200gb)

OS Install
	select keyboard
	enable network
	set install destination
	select timezone + network time
	software selection
		Server with GUI
			+ Development Tools

	set root password (123456)
	create yildiz user as administrator

	accept license
	login as yildiz
		disable location services
	login as root
		disable location services

SNAPSHOT

	login as root
	nmtui
		ip address 192.168.13.10
		default gateway 192.168.13.2
		dns 1.1.1.1
		ipv6 ignore
	ifdown ens33
	ifup ens33

	switch to ssh as root
	vi /etc/hosts
		192.168.13.10 oracle0.localdomain
	vi /etc/selinux/config
		SELINUX=disabled

SNAPSHOT

	fdisk /dev/sdb
		n
			p,1,xx,xx
		t
			8e
		w
	pvcreate /dev/sdb1
	vgcreate vg_swap /dev/sdb1
	lvcreate -n lv_swap -l +100%FREE vg_swap
	mkswap /dev/vg_swap/lv_swap
	swapoff /dev/rhel_oracle0/swap
	swapon /dev/vg_swap/lv_swap
	vi /etc/fstab
		remove old swap
		add new swap
	vi /etc/default/grub
		change swap to vg_swap/lv_swap
	grub2-mkconfig > /boot/grub2/grub.cfg

	lvremove /dev/rhel_oracle0/swap
	lvextend /dev/rhel_oracle0/root -l +100%FREE
	xfs_growfs /

	fdisk /dev/sdc
		n
	pvcreate /dev/sdc1
	vgcreate vg_data /dev/sdc1
	lvcreate -n lv_data -l +100%FREE vg_data
	mkfs.xfs /dev/mapper/vg_data-lv_data
	mkdir /udata
	mount /dev/mapper/vg_data-lv_data /udata

	fdisk /dev/sdd
		n
	pvcreate /dev/sdd1
	vgcreate vg_backup /dev/sdd1
	lvcreate -n lv_backup -l +100%FREE vg_backup
	mkfs.xfs /dev/mapper/vg_backup-lv_backup
	mkdir /ubackup
	mount /dev/mapper/vg_backup-lv_backup /ubackup

	vi /etc/fstab
		/dev/vg_data/lv_data /udata xfs defaults 0 0
		/dev/vg_backup/lv_backup /ubackup xfs defaults 0 0

SNAPSHOT

	subscription-manager config --rhsm.auto_enable_yum_plugins=0
	vi /etc/yum/pluginconf.d/subscription-manager.conf
		enabled=0
	yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
	mkdir /rhel-iso
	mount -o loop /ubackup/rhel-server-7.7-x86_64-dvd.iso /rhel-iso
	cp /rhel-iso/media.repo /etc/yum.repos.d/rhel7.repo
	chmod 644 /etc/yum.repos.d/rhel7.repo
	vi /etc/yum.repos.d/rhel7.repo
		gpgcheck=1
		enabled=1
		baseurl=file:///rhel-iso/
		gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release
	yum clean all
	subscription-manager clean

	vi /ubackup/prereq-list.txt
		binutils
		compat-libcap1
		compat-libstdc++-33
		gcc
		gcc-c++
		glibc
		glibc-devel
		ksh
		libgcc
		libstdc++
		libstdc++-devel
		libaio
		libaio-devel
		libXext
		libXtst
		libX11
		libXau
		libxcb
		libXi
		make
		sysstat
		libXmu
		libXt
		libXv
		libXxf86dga
		libdmx
		libXxf86misc
		libXxf86vm
		xorg-x11-utils
		xorg-x11-xauth
	yum install `awk '{print $1}' /ubackup/prereq-list.txt`

	vi /etc/yum.repos.d/rhel7.repo
		enabled=0
	umount /rhel-iso
	rm -rf /rhel-iso

	groupadd --gid 54321 oinstall
	groupadd --gid 54322 dba
	groupadd --gid 54323 asmdba
	groupadd --gid 54324 asmoper
	groupadd --gid 54325 asmadmin
	groupadd --gid 54326 oper
	groupadd --gid 54327 backupdba
	groupadd --gid 54328 dgdba
	groupadd --gid 54329 kmdba
	useradd --uid 54321 --gid oinstall --groups dba,oper,asmdba,asmoper,backupdba,dgdba,kmdba oracle
	passwd oracle
		oracle

	mkdir -p /udata/app/oracle/product/19.3.0.0.0/db_home1
	mkdir -p /udata/app/oraInventory
	unzip /ubackup/LINUX.X64_193000_db_home.zip -d /udata/app/oracle/product/19.3.0.0.0/db_home1
	chown -R oracle.oinstall /udata/app

	firewall-cmd --permanent --zone=public --add-port=1521/tcp
	firewall-cmd --reload

SNAPSHOT

	login as oracle
	cd /udata/app/oracle/product/19.3.0.0.0/db_home1
	./runInstaller

	software only
	single instance
	enterprise edition
	/udata/app/oracle
	/udata/app/oraInventory
	automatically run, use root
	fix and check again
	ignore all
	next

SNAPSHOT

	as root
 	mkdir data_files
 	chown oracle.oinstall data_files/
 	mkdir archive_logs
	chown oracle.oinstall archive_logs/

 	as oracle
	. oraenv
	ORACLE_SID=give your chosen SID (db0)
	ORACLE_HOME=/udata/app/oracle/product/19.3.0.0.0/db_home1
	dbca
	advanced
	single instance
	general purpose
	global name and SID: db0 (no localdomain)
	don't create as container
	use following for the database storage attributes
	browse to /udata/data_files
	don't use OMF
	specify FRA
	browse to /ubackup/archive_logs
	50GB (yaklasik dbnin yari boyutu)
	enable archiving
	don't create new listener
	don't vault
	don't label security
	memory -> use automatic mem management
	sizing -> nothing
	character sets -> UTF8
	connection mode -> dedicated
	samples schemas -> no
	don't configure enterprise manager to port 5500
	don't register to cloud
	same password to rule them all
	create database
	install


increase memory:
show parameter memory
alter system set memory_max_target=3G scope=spfile;
alter system set memory_target=0 scope=spfile;
mount -t tmpfs shmfs -o size=4096m /dev/shm
vi /etc/fstab
	shmfs /dev/shm tmpfs size=4096m 0
(/dev/shm must be greater than memory_max_target)


on host:
create pfile from spfile
create that special standby controlfile
	burda loglardan girip alert.log'dan add logfilelari aldik
	girip standby'a caktik (ama once bir backup restore ettik)
copy these ower together with pwd file

on standby:
oraenv with db0dg
pfile'i duzenle db0'lari db0dg yap
startup nomount
rmande restore controlfile

tnsnames.ora'lari esitledik
DB0=
  (DESCRIPTION =
    (ADDRESS = (PROTOCOL = TCP)(HOST = oracle0)(PORT = 1521))
    (CONNECT_DATA =
      (SERVER = DEDICATED)
      (SERVICE_NAME = DB0)
    )
  )

DB0DG=
  (DESCRIPTION =
    (ADDRESS = (PROTOCOL = TCP)(HOST = oracle1)(PORT = 1521))
    (CONNECT_DATA =
      (SERVER = DEDICATED)
      (SERVICE_NAME = DB0DG)
    )
  )  

hostnames'leri esitledik
sonra
alter system set log_archive_config='DG_CONFIG=(DB0, DB0DG)' scope=both sid='*';  ----------standby da-----------
alter system set log_archive_config='DG_CONFIG=(DB0, DB0DG)' scope=both sid='*';  ----------prod da -----------
alter system set fal_server='DB0DG' scope=both sid='*'; -----------dg---------
alter system set fal_client='DB0' scope=both sid='*';   -----------dg---------
alter system set fal_server='DB0' scope=both sid='*';  ----------prod da -----------
alter system set fal_client='DB0DG' scope=both sid='*';  ----------prod da -----------

alter system set log_archive_dest_2='SERVICE=DB0DG LGWR ASYNC VALID_FOR=(ONLINE_LOGFILES,PRIMARY_ROLE) DB_UNIQUE_NAME=DB0DG' scope=both sid='*';  ---------PROD---------
alter system set LOG_ARCHIVE_DEST_2='SERVICE=DB0 LGWR ASYNC VALID_FOR=(ONLINE_LOGFILES,PRIMARY_ROLE) DB_UNIQUE_NAME=DB0' scope=both sid='*';  ---------DG----------

hostta:
alter system set log_archive_status_2='defer' sonra 'enable'

hostt'dan bir rman backupldik
	run {
		backup AS COMPRESSED BACKUPSET full database format '/ubackup/rman_backup/dbf_1_%d_%T_%s_%p.bck';
		SQL 'ALTER SYSTEM ARCHIVE LOG CURRENT';
		backup as COMPRESSED BACKUPSET archivelog all format '/ubackup/rman_backup/arc_1_%d_%T_%s_%p.bck';
		crosscheck archivelog all;
		delete noprompt archivelog all completed before 'sysdate-1';
		backup current controlfile format '/ubackup/rman_backup/cnt_1_%d_%T_%s_%p.bck';
		backup spfile format '/ubackup/rman_backup/spf_1_%d_%T_%s_%p.bck';
		crosscheck archivelog all;
	}
standby'a rman catalog, restore, recover ettik
standby'i alter database open dedik
alter system set standby_file_management=auto scope=both; // dedik ki yeni datafilelar da olussun
sonra o logfilelari yarattik (hani alert log'dan aldigimiz)
alter database recover managed standby database cancel;
alter database recover managed standby database using current logfile disconnect from session;
https://dbaclass.com/article/enable-active-dataguard-physical-standby-database/
host'a alter system switch logfile dedik
select * from v$dataguard_stats; // 0 saniye olmasi lazim
