# set ip or add mac to pfsense
# add id_rsa and connect ssh
ssh-copy-id -i id_rsa yildiz@victoria.hlsd.com
sudo visudo
yildiz ALL=(ALL) NOPASSWD:ALL
passwd
sudo su -

hostnamectl set-hostname victoria.hlsd.com
nano /etc/hosts

timedatectl set-timezone Europe/Nicosia

apt update
apt upgrade
reboot

ufw enable
ufw allow ssh

cd /root
mkdir pki
cd pki
mkdir server client
cd server
nano openssl.conf
# copy victoria.hlsd.com-openssl.conf file here

openssl genrsa -out server.key.pem 4096
openssl req -config openssl.conf -new -sha256 -key server.key.pem -out server.csr

# copy the csr to ca.web.hlsd.com /root/inter_ca_vpn/csr/victoria.hlsd.com.csr
openssl ca -config openssl.conf -extensions server_cert -days 375 -notext -md sha256 -in csr/victoria.hlsd.com.csr -out issued/victoria.hlsd.com.cert.pem
# copy certs/ca.cert.pem, certs/inter_ca.cert.pem, crl.pem, issued/victoria.hlsd.com.cert.pem into /root/pki/server

cd /root/pki/client
cp /root/pki/server/inter_ca.cert.pem ./
cp /root/pki/server/ca.cert.pem ./

# copy these files
nano web-client-openssl.conf
nano web-make-client-csr.sh

chmod u+x web-make-client-csr.sh

# make client csrs
./web-make-client-csr.sh yildiz01.web.hlsd.com
./web-make-client-csr.sh yildiz02.web.hlsd.com
./web-make-client-csr.sh yildiz03.web.hlsd.com
./web-make-client-csr.sh zafer01.web.hlsd.com
./web-make-client-csr.sh zafer02.web.hlsd.com
./web-make-client-csr.sh zafer03.web.hlsd.com

# get csrs signed with ca.web.hlsd.com /root/inter_ca_web/csr/
openssl ca -config openssl.conf -extensions client_cert -days 375 -notext -md sha256 -in csr/yildiz01.web.hlsd.com.csr -out issued/yildiz01.web.hlsd.com.cert.pem
openssl ca -config openssl.conf -extensions client_cert -days 375 -notext -md sha256 -in csr/yildiz02.web.hlsd.com.csr -out issued/yildiz02.web.hlsd.com.cert.pem
openssl ca -config openssl.conf -extensions client_cert -days 375 -notext -md sha256 -in csr/yildiz03.web.hlsd.com.csr -out issued/yildiz03.web.hlsd.com.cert.pem
openssl ca -config openssl.conf -extensions client_cert -days 375 -notext -md sha256 -in csr/zafer01.web.hlsd.com.csr -out issued/zafer01.web.hlsd.com.cert.pem
openssl ca -config openssl.conf -extensions client_cert -days 375 -notext -md sha256 -in csr/zafer02.web.hlsd.com.csr -out issued/zafer02.web.hlsd.com.cert.pem
openssl ca -config openssl.conf -extensions client_cert -days 375 -notext -md sha256 -in csr/zafer03.web.hlsd.com.csr -out issued/zafer03.web.hlsd.com.cert.pem

# revoke some just in case
openssl ca -config openssl.conf -revoke issued/yildiz03.web.hlsd.com.cert.pem
openssl ca -config openssl.conf -revoke issued/zafer03.web.hlsd.com.cert.pem
mv issued/yildiz03.web.hlsd.com.cert.pem revoked/20231215_yildiz03.web.hlsd.com.cert.pem
mv issued/zafer03.web.hlsd.com.cert.pem revoked/20231215_zafer03.web.hlsd.com.cert.pem
openssl ca -config openssl.conf -gencrl -out crl.pem

# copy the signed certs back together with crl

# install nvm, check repo for latest version https://github.com/nvm-sh/nvm
add user unodejs
su - unodejs
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
source .bashrc
nvm -v
nvm ls-remote
nvm install 20.10.0
node -v
npm -v

# install global packages
npm i -g pm2
npm i -g npm-check-updates
# update npm is patch available

# make app folders
# copy app files (package.json, pm2.config.psj, app.json, run.js)
# start app with pm2
# save pm2 state
# enable pm2 on startup

# updating nodejs
nvm install 20.xx.x
nvm ls
nvm use 20.xx.x

pm2 -v
ncu -v
# re-install global packages if necessary

# updating global packages
ncu -g
# update corepack, pm2, ncu, vs

database: each server and client individually self-signed and added to each other
vpn: vpn_ca per server -> server/client.crt
root_ca
	code_ca
	web_ca
web_server: 
	root_web_chained_ca -> server.crt
web_server_client:
	root_web_chained_ca -> client.crt
nginx_server:
	hlsi.dev globally signed crt